# If not running interactively, don't do anything
[[ "$-" != *i* ]] && return

set -o vi

# Environment variables {
export git_work_dir=~/localgit/
export EDITOR=vim
export github_top_root=~/github/
export github_root=${github_top_root}github/
export digitales_backup=$HOME/Digitales-Backup/
export ldp_dir=/home/rene/LDP/
export rn_root=$HOME/renenyffenegger.ch/
# }

PS1="\[\033[0;34m\]\w \[\033[0;35m\]\! \[\033[0m\]>"

if [ -d ~/github/lib/scripts ]; then # { 
  export PATH=~/github/lib/scripts:$PATH
fi # }
if [ -d ~/localgit/scripts ]; then # {
  export PATH=~/localgit/scripts:$PATH
fi # }
if [ -d ${github_root}vim/runtime ]; then # {
  export VIMRUNTIME=${github_root}vim/runtime
fi # }
if [ -d /media/rene/TOSHIBA\ EXT/git ]; then # {
  export git_local_repo_dir=/media/rene/TOSHIBA\ EXT/git
fi # }

# Ignore case of files in shell {
#   http://unix.stackexchange.com/a/48773/6479
shopt -s nocaseglob
# same thing in
#   yash:
#     set +o case-glob
#   zsh:
#     unsetopt CASE_GLOB
# }

# { History

export HISTIGNORE='*TQ84*'
export HISTCONTROL=ignoreboth

# }

if   [ "$(uname)" == "Darwin" ]; then # {

    # Mac OS
    :

# }
elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then # {

    :

# }
elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then # {

     # ----- Windows NT platform. 
     #
     # Assuming it's msys
     # TODO: is it always Msys?      
     
  #  Make sure that Git does not always say
  # «WARNING: terminal is not fully functional»

     export TERM=msys

# }
elif [ "$(uname -o)"  == "Cygwin" ]; then # {

#  TODO
#    Compare condition above with
#       if [[ $OSTYPE == *cygwin* ]]; then
#       fi

   alias dospath='cygpath -w `pwd`'
   alias pc='dospath > /dev/clipboard'
   alias c:='cd /cygdrive/c'

fi # }


# Alias {
alias ls='ls --color=auto'
alias info='info --vi-keys'
alias gitp=". gitp.sh"
alias gitl="git pull"
alias yt2mp3='youtube-dl --extract-audio --audio-format mp3 $1'
alias yt2mp4='youtube-dl --merge-output-format mp4 $1'
alias cdvimf='cd ~/.vim'
alias cdnot='cd $github_root/notes/notes'
alias cdhyd='cd $github_root/Hydroplattentheorie'
alias cdloc='cd ~/localgit'
# }
# Functions {

function fb() { # http://unix.stackexchange.com/questions/278732/is-there-a-standard-abbreviation-for-find-name-foo-or-do-i-need-a-function
  find . -iname "$1"
}

function mdcd() { # mkdir and cd into it
  dir=$1
  
  if [ -e "$dir" ]; then
    echo "File or directory $dir already exists";
    exit -1
  fi
  
  mkdir "$dir"
  cd    "$dir"
}

# }

